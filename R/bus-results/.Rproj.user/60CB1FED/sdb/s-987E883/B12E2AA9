{
    "contents" : "library(chron)\n\ngetAvgVariance <- function(df) \n{\n    result.df <- data.frame(Time = 0, Num.Days = 0, Avg.Var = 0, Avg.Ridership = 0,   \n                            Avg.Var.Good.W = 0, Avg.Ridership.Good.W = 0, Avg.Var.Bad.W = 0, Avg.Ridership.Bad.W = 0)\n    sched.times <- sort(unique(df$Sched.Time))\n    for (time in sched.times) \n    {\n        temp.df <- df[df$Sched.Time == time,]\n        num.days <- nrow(temp.df)\n        avg.riders.total <- mean(temp.df$TotalRidership, na.rm =TRUE)\n        avg.var.total <- mean(temp.df$Variance)\n        \n        precip.split <- split(temp.df, cut(temp.df$TotalPrecipitation, c(-100,.025,100), include.lowest=TRUE))\n        avg.ridership.good.w <- mean(as.numeric(precip.split[[1]]$TotalRidership), na.rm=TRUE)\n        avg.ridership.bad.w <- mean(as.numeric(precip.split[[2]]$TotalRidership), na.rm=TRUE)\n        avg.var.good.w <- mean(as.numeric(precip.split[[1]]$Variance), na.rm=TRUE)\n        avg.var.bad.w <- mean(as.numeric(precip.split[[2]]$Variance), na.rm=TRUE)\n        new.row <- c(time, num.days, avg.var.total, avg.riders.total, \n                     avg.var.good.w, avg.ridership.good.w, avg.var.bad.w, avg.ridership.bad.w)\n       # print(new.row)\n        result.df <- rbind(result.df, new.row)\n        #print(head(result.df))\n    }\n    return(result.df)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nget_avg_stop_time <- function(routeData, stopData) { \n    for(i in 1:nrow(routeData)) { \n        row <- routeData[i,]\n        # do stuff with row\n        closestTimeRow <- 0\n        ifelse(row$Time > \"07:00:00\" & row$Time <= \"7:37:00\", closestTimeRow <- 1,\n        ifelse(row$Time > \"07:37:00\" & row$Time <= \"8:04:30\", closestTimeRow <- 2,\n        ifelse(row$Time > \"08:04:30\" & row$Time <= \"8:37:30\", closestTimeRow <- 3,\n        ifelse(row$Time > \"08:37:30\" & row$Time <= \"9:21:00\", closestTimeRow <- 4,\n        ifelse(row$Time > \"09:21:00\" & row$Time <= \"10:08:00\", closestTimeRow <- 5,\n        ifelse(row$Time > \"10:08:00\" & row$Time <= \"10:48:00\", closestTimeRow <- 6,\n        ifelse(row$Time > \"10:48:00\" & row$Time <= \"11:32:00\", closestTimeRow <- 7,\n        ifelse(row$Time > \"11:32:00\" & row$Time <= \"12:18:30\", closestTimeRow <- 8,\n        ifelse(row$Time > \"12:18:30\" & row$Time <= \"12:59:00\", closestTimeRow <- 9,\n        ifelse(row$Time > \"12:59:00\" & row$Time <= \"13:42:00\", closestTimeRow <- 10,\n        ifelse(row$Time > \"13:42:00\" & row$Time <= \"14:29:00\", closestTimeRow <- 11,\n        ifelse(row$Time > \"14:29:00\" & row$Time <= \"15:12:00\", closestTimeRow <- 12,\n        ifelse(row$Time > \"15:12:00\" & row$Time <= \"15:50:00\", closestTimeRow <- 13,\n        ifelse(row$Time > \"15:50:00\" & row$Time <= \"16:30:30\", closestTimeRow <- 14,\n        ifelse(row$Time > \"16:30:30\" & row$Time <= \"17:12:00\", closestTimeRow <- 15,\n        ifelse(row$Time > \"17:12:00\" & row$Time <= \"17:53:00\", closestTimeRow <- 16,\n        ifelse(row$Time > \"17:53:00\" & row$Time <= \"18:35:00\", closestTimeRow <- 17,\n        ifelse(row$Time > \"18:35:00\" & row$Time <= \"19:13:00\", closestTimeRow <- 18,\n        ifelse(row$Time > \"19:13:00\" & row$Time <= \"19:49:00\", closestTimeRow <- 19,\n        ifelse(row$Time > \"19:49:00\" & row$Time <= \"20:28:30\", closestTimeRow <- 20,\n        ifelse(row$Time > \"20:28:30\" & row$Time <= \"21:07:30\", closestTimeRow <- 21,\n        ifelse(row$Time > \"21:07:30\" & row$Time <= \"21:42:30\", closestTimeRow <- 22,\n        ifelse(row$Time > \"21:42:30\" & row$Time <= \"22:17:30\", closestTimeRow <- 23,\n        ifelse(row$Time > \"22:17:30\" & row$Time <= \"22:52:30\", closestTimeRow <- 24,\n        ifelse(row$Time > \"22:52:30\" & row$Time <= \"23:27:30\", closestTimeRow <- 25,\n        ifelse(row$Time > \"23:27:30\" & row$Time <= \"23:59:59\", closestTimeRow <- 26,\n            closestTimeRow <- 27))))))))))))))))))))))))))\n        \n        stopRow <- stopData[closestTimeRow,]\n        if (stopRow$num_times == 0) {\n            stopRow$min = row$Time\n            stopRow$max = row$Time\n        }\n        if (row$Time < stopRow$min) {stopRow$min = row$Time}\n        if (row$Time > stopRow$max) {stopRow$max = row$Time}\n        stopRow$sum_of_times <- stopRow$sum_of_times + row$Time\n        stopRow$num_times <- stopRow$num_times + 1\n        stopData[closestTimeRow,] <- stopRow\n    }\n    return(stopData)\n}",
    "created" : 1449849391287.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4229973780",
    "id" : "B12E2AA9",
    "lastKnownWriteTime" : 1449871984,
    "path" : "~/Dropbox/School/a2_15_Fall/b565/bus-data/bus-results/bus-functions.R",
    "project_path" : "bus-functions.R",
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}