{
    "contents" : "library(chron)\n\naf <- read.csv(\"results_a_route_fall.csv\", header=TRUE, stringsAsFactors = FALSE)\nas <- read.csv(\"results_a_route_spring.csv\", header=TRUE, stringsAsFactors = FALSE)\nbf <- read.csv(\"results_b_route_fall.csv\", header=TRUE, stringsAsFactors = FALSE)\nbs <- read.csv(\"results_b_route_spring.csv\", header=TRUE, stringsAsFactors = FALSE)\nef <- read.csv(\"results_e_route_fall.csv\", header=TRUE, stringsAsFactors = FALSE)\nes <- read.csv(\"results_e_route_spring.csv\", header=TRUE, stringsAsFactors = FALSE)\nxf <- read.csv(\"results_x_route_fall.csv\", header=TRUE, stringsAsFactors = FALSE)\nxs <- read.csv(\"results_x_route_spring.csv\", header=TRUE, stringsAsFactors = FALSE)\n\n# Create new Time column \"Sched.Time\" which contains \"time\" class scheduled times\naf$Sched.Time <- chron(times = af$Start.Time.Schedule)\nas$Sched.Time <- chron(times = as$Start.Time.Schedule)\nbf$Sched.Time <- chron(times = bf$Start.Time.Schedule)\nbs$Sched.Time <- chron(times = bs$Start.Time.Schedule)\nef$Sched.Time <- chron(times = ef$Start.Time.Schedule)\nes$Sched.Time <- chron(times = es$Start.Time.Schedule)\nxf$Sched.Time <- chron(times = xf$Start.Time.Schedule)\nxs$Sched.Time <- chron(times = xs$Start.Time.Schedule)\n\n# Change Date Column from character to \"date\"\naf$Date <- chron(dates = af$Date) \nas$Date <- chron(dates = as$Date)\nbf$Date <- chron(dates = bf$Date) \nbs$Date <- chron(dates = bs$Date) \nef$Date <- chron(dates = ef$Date) \nes$Date <- chron(dates = es$Date) \nxf$Date <- chron(dates = xf$Date) \nxs$Date <- chron(dates = xs$Date) \n\naf$TotalRidership <- as.numeric(af$TotalRidership)\nas$TotalRidership <- as.numeric(as$TotalRidership)\nbf$TotalRidership <- as.numeric(bf$TotalRidership)\nbs$TotalRidership <- as.numeric(bs$TotalRidership)\nef$TotalRidership <- as.numeric(ef$TotalRidership)\nes$TotalRidership <- as.numeric(es$TotalRidership)\nxf$TotalRidership <- as.numeric(xf$TotalRidership)\nxs$TotalRidership <- as.numeric(xs$TotalRidership)\n\naf.sched.times <- sort(unique(af$Sched.Time))\naf.times <- data.frame(Time = sched.times)\n\n# Get the results for each data frame\naf.results <- getAvgVariance(af)\naf.results$Time <- chron(times = af.results$Time)\naf.results <- af.results[-1, ] # delete first row, which was intialized with zeros\nwrite.csv(af.results, \"A.F.averages.csv\", row.names=FALSE)\nas.results <- getAvgVariance(as)\nas.results$Time <- chron(times = as.results$Time)\nas.results <- as.results[-1, ]\nwrite.csv(as.results, \"A.S.averages.csv\", row.names=FALSE)\n\nbf.results <- getAvgVariance(bf)\nbf.results$Time <- chron(times = bf.results$Time)\nbf.results <- bf.results[-1, ]\nwrite.csv(bf.results, \"B.F.averages.csv\", row.names=FALSE)\nbs.results <- getAvgVariance(bs)\nbs.results$Time <- chron(times = bs.results$Time)\nbs.results <- bs.results[-1, ]\nwrite.csv(bs.results, \"B.S.averages.csv\", row.names=FALSE)\n\nef.results <- getAvgVariance(ef)\nef.results$Time <- chron(times = ef.results$Time)\nef.results <- ef.results[-1, ]\nwrite.csv(ef.results, \"E.F.averages.csv\", row.names=FALSE)\nes.results <- getAvgVariance(es)\nes.results$Time <- chron(times = es.results$Time)\nes.results <- es.results[-1, ]\nwrite.csv(es.results, \"E.S.averages.csv\", row.names=FALSE)\n\nxf.results <- getAvgVariance(xf)\nxf.results$Time <- chron(times = xf.results$Time)\nxf.results <- xf.results[-1, ]\nwrite.csv(xf.results, \"X.F.averages.csv\", row.names=FALSE)\nxs.results <- getAvgVariance(xs)\nxs.results$Time <- chron(times = xs.results$Time)\nxs.results <- xs.results[-1, ]\nwrite.csv(xs.results, \"X.S.averages.csv\", row.names=FALSE)\n",
    "created" : 1449857122570.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3299088116",
    "id" : "7EC400EA",
    "lastKnownWriteTime" : 1449875780,
    "path" : "~/Dropbox/School/a2_15_Fall/b565/bus-data/bus-results/charts.r",
    "project_path" : "charts.r",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}